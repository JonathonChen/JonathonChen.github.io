{"meta":{"title":"博客","subtitle":null,"description":null,"author":"陈志远","url":"https://jonathonchen.github.io"},"pages":[],"posts":[{"title":"vue loading加载动画组件","slug":"vue loading组件","date":"2017-08-19T13:09:14.515Z","updated":"2017-08-19T13:59:15.000Z","comments":true,"path":"2017/08/19/vue loading组件/","link":"","permalink":"https://jonathonchen.github.io/2017/08/19/vue loading组件/","excerpt":"","text":"实现效果实现了加载是颜色的变化以及进度条的变化 下面是代码实现 html页面测试 123456789101112131415161718192021222324252627282930313233343536373839404142434445&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;style&gt; .spinner &#123; transform-origin: center; animation: rotator 6s linear infinite; background-color:#cccccc; width:150px; height:150px; &#125; @keyframes rotator &#123; 0% &#123; transform: rotate(0deg); &#125; 100% &#123; transform: rotate(270deg); &#125; &#125; .path &#123; stroke-dasharray: 187; stroke-dashoffset: 0; transform-origin: center; animation: dash 2s ease-in-out infinite, colors 4s ease-in-out infinite; &#125; @keyframes colors &#123; 0% &#123; stroke: #4285F4; &#125; 25% &#123; stroke: #DE3E35; &#125; 50% &#123; stroke: #F7C223; &#125; 75% &#123; stroke: #1B9A59; &#125; 100% &#123; stroke: #4285F4; &#125; &#125; @keyframes dash &#123; 0% &#123; stroke-dashoffset: 187; &#125; 50% &#123; stroke-dashoffset: 93.5; &#125; 100% &#123; stroke-dashoffset: 0; &#125; &#125;&lt;/style&gt;&lt;body&gt; &lt;svg class=&quot;spinner&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt; &lt;circle class=&quot;path&quot; stroke=&quot;red&quot; fill=&quot;none&quot; stroke-width=&quot;6&quot; cx=&quot;75&quot; cy=&quot;75&quot; r=&quot;30&quot;&gt;&lt;/circle&gt; &lt;/svg&gt; &lt;/body&gt;&lt;/html&gt; vue Loading组件 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192&lt;template&gt; &lt;div class=&quot;loading-component&quot;&gt; &lt;svg class=&quot;spinner&quot; :style=&quot;loadingSize&quot; viewBox=&quot;0 0 66 66&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt; &lt;circle class=&quot;path&quot; :style=&quot;loadingColor&quot; fill=&quot;none&quot; :stroke-width=&quot;stroke&quot; cx=&quot;33&quot; cy=&quot;33&quot; r=&quot;30&quot;&gt;&lt;/circle&gt; &lt;/svg&gt; &lt;/div&gt;&lt;/template&gt;&lt;script type=&quot;text/ecmascript-6&quot;&gt; export default &#123; props: &#123; size: &#123; type: Number, default: 50 &#125;, stroke: &#123; type: Number, default: 3.5 &#125;, color: &#123; type: String, default: &apos;#ed424b&apos; &#125; &#125;, computed: &#123; loadingSize() &#123; const newSize = this.size + &apos;px&apos; return &#123; width: newSize, height: newSize &#125; &#125;, loadingColor() &#123; return &#123; stroke: this.color &#125; &#125; &#125; &#125;&lt;/script&gt;&lt;style lang=&quot;less&quot; type=&quot;text/less&quot;&gt; .loading-component &#123; display: inline-block; pointer-events: none; will-change: transform, opacity; position: fixed; left: 50%; top: 50%; transform: translate(-50%, -50%); &#125; //2 * pi * r = 188.4 @offset: 187; @duration: 1.4s; //设置外层旋转形成加载的效果 .spinner &#123; transform-origin: center; animation: rotator @duration linear infinite; &#125; @keyframes rotator &#123; 0% &#123; transform: rotate(0deg); &#125; 100% &#123; transform: rotate(270deg); &#125; &#125; .path &#123; stroke-dasharray: @offset; stroke-dashoffset: 0; transform-origin: center; // 设置颜色变化以及dash长度的变化 animation: dash @duration ease-in-out infinite, colors @duration ease-in-out infinite; &#125; @keyframes colors &#123; 0% &#123; stroke: #4285F4; &#125; 25% &#123; stroke: #DE3E35; &#125; 50% &#123; stroke: #F7C223; &#125; 75% &#123; stroke: #1B9A59; &#125; 100% &#123; stroke: #4285F4; &#125; &#125; //让空白部分慢慢减少 @keyframes dash &#123; 0% &#123; stroke-dashoffset: @offset; &#125; 50% &#123; stroke-dashoffset: @offset/4; &#125; 100% &#123; stroke-dashoffset: @offset; &#125; &#125;&lt;/style&gt;","categories":[],"tags":[]},{"title":"v-model本质（以底部导航切换为例子）","slug":"v-model","date":"2017-08-17T13:33:16.790Z","updated":"2017-08-17T13:47:46.823Z","comments":true,"path":"2017/08/17/v-model/","link":"","permalink":"https://jonathonchen.github.io/2017/08/17/v-model/","excerpt":"","text":"v-modelv-model本质是1&lt;input type=&quot;text&quot; v-bind:value=&quot;dataA&quot; v-on:input=&quot;dataA = $event.target.value&quot; /&gt; 1.Index页面该页面包含了m-tabbar和m-tabbar-item组件，目的是实现底部tab切换m-tabbar传入 v-mode:”select”实际上是v-bind:value=”select” v-on:input=”select = $event.target.value”v-bind:value=”select”传入的props(父-&gt;子)v-on:input=”select = $event.target.value” 监听$emit(‘input’,…)v-model 数据双向绑定12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152&lt;template&gt; &lt;div&gt; &lt;m-tabbar v-model=&quot;select&quot;&gt; &lt;m-tabbar-item id=&apos;tab1&apos;&gt; &lt;img src=&quot;../assets/images/ic_tab_home_normal.png&quot; alt=&quot;&quot; slot=&quot;icon-normal&quot;&gt; &lt;img src=&quot;../assets/images/ic_tab_home_active.png&quot; alt=&quot;&quot; slot=&quot;icon-active&quot;&gt; 首页 &lt;/m-tabbar-item&gt; &lt;m-tabbar-item id=&apos;tab2&apos;&gt; &lt;img src=&quot;../assets/images/ic_tab_subject_normal.png&quot; alt=&quot;&quot; slot=&quot;icon-normal&quot;&gt; &lt;img src=&quot;../assets/images/ic_tab_subject_active.png&quot; alt=&quot;&quot; slot=&quot;icon-active&quot;&gt; 书影音 &lt;/m-tabbar-item&gt; &lt;m-tabbar-item id=&apos;tab3&apos;&gt; &lt;img src=&quot;../assets/images/ic_tab_status_normal.png&quot; alt=&quot;&quot; slot=&quot;icon-normal&quot;&gt; &lt;img src=&quot;../assets/images/ic_tab_status_active.png&quot; alt=&quot;&quot; slot=&quot;icon-active&quot;&gt; 广播 &lt;/m-tabbar-item&gt; &lt;m-tabbar-item id=&apos;tab4&apos;&gt; &lt;img src=&quot;../assets/images/ic_tab_group_normal.png&quot; alt=&quot;&quot; slot=&quot;icon-normal&quot;&gt; &lt;img src=&quot;../assets/images/ic_tab_group_active.png&quot; alt=&quot;&quot; slot=&quot;icon-active&quot;&gt; 小组 &lt;/m-tabbar-item&gt; &lt;m-tabbar-item id=&apos;tab5&apos;&gt; &lt;img src=&quot;../assets/images/ic_tab_profile_normal.png&quot; alt=&quot;&quot; slot=&quot;icon-normal&quot;&gt; &lt;img src=&quot;../assets/images/ic_tab_profile_active.png&quot; alt=&quot;&quot; slot=&quot;icon-active&quot;&gt; 我的 &lt;/m-tabbar-item&gt; &lt;/m-tabbar&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt; import mTabbar from &apos;../components/tabbar&apos; import mTabbarItem from &apos;../components/tabbar-item&apos; export default &#123; name: &apos;index&apos;, components: &#123; mTabbar, mTabbarItem &#125;, data()&#123; return&#123; select:&apos;tab1&apos; &#125; &#125;, watch:&#123; select:function()&#123; console.log(this.select); &#125; &#125; &#125;&lt;/script&gt; 1.父组件接收v-bind:value属性123456789101112131415161718192021222324252627&lt;template&gt; &lt;div class=&quot;m-tabbar&quot;&gt; &lt;slot&gt;&lt;/slot&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;export default &#123; props:[&apos;value&apos;]&#125;&lt;/script&gt;&lt;style lang=&quot;less&quot;&gt;.m-tabbar&#123; display: flex; flex-direction: row; position: fixed; bottom: 0; left: 0; right: 0; width: 100%; overflow: hidden; height: 50px; background: #fff; border-top: 1px solid #e4e4e4;&#125;&lt;/style&gt; 2.子组件接收id属性值，通过$parent.$emit(‘input’,id)向父组件传递当前点击id的值，父组件由on来接收123456789101112131415161718192021222324252627282930313233343536373839404142434445&lt;template&gt; &lt;a class=&quot;m-tabbar-item&quot; :class=&quot;&#123;&apos;is-active&apos;:isActive&#125;&quot; @click=&quot;$parent.$emit(&apos;input&apos;,id)&quot;&gt; &lt;span class=&quot;m-tabbar-item-icon&quot; v-show=&quot;!isActive&quot;&gt;&lt;slot name=&quot;icon-normal&quot;&gt;&lt;/slot&gt;&lt;/span&gt; &lt;span class=&quot;m-tabbar-item-icon&quot; v-show=&quot;isActive&quot;&gt;&lt;slot name=&quot;icon-active&quot;&gt;&lt;/slot&gt;&lt;/span&gt; &lt;span class=&quot;m-tabbar-item-text&quot;&gt;&lt;slot&gt;&lt;/slot&gt;&lt;/span&gt; &lt;/a&gt;&lt;/template&gt;&lt;script&gt;export default &#123; props:[&apos;id&apos;], computed: &#123; isActive()&#123; if(this.$parent.value===this.id)&#123; return true; &#125; &#125; &#125;&#125;&lt;/script&gt;&lt;style lang=&quot;less&quot;&gt;.m-tabbar-item&#123; flex: 1; text-align: center; .m-tabbar-item-icon&#123; display: block; padding-top: 2px; img&#123; width: 28px; height: 28px; &#125; &#125; .m-tabbar-item-text&#123; display: block; font-size: 10px; color:#949494; &#125; &amp;.is-active&#123; .m-tabbar-item-text&#123; color: #42bd56; &#125; &#125;&#125;&lt;/style&gt;","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2017-08-15T14:26:13.022Z","updated":"2017-08-15T14:26:13.022Z","comments":true,"path":"2017/08/15/hello-world/","link":"","permalink":"https://jonathonchen.github.io/2017/08/15/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}